* v0.2.9
- add "Secondary" suffix to the names of tick labels of secondary axes
* v0.2.8
- add rotate/alignment argument to another =tickLabels= overload
* v0.2.7
- fix the spacing for multi line text. The reference height was wrong.
* v0.2.6
- allow assignment of axis in =initCoord1D= proc / template using it,
  use that in =initCoord= proc / template for =ukData=
- handle negative width / height in =drawRaster=
* v0.2.5 
- add support for raster objects, i.e. bitmap based rectangles with
  NxM colored blocks
* v0.2.4
- add the option to provide tick labels via a callback, PR #18 by @cooldome
* v0.2.3
- make tick label positions relative. For plots that are embedded this
  is important to keep the labels where they belong.
* v0.2.2
- fixes arithmetic for coordinates involving =ukData= kinds
- fix string representation for =goComposite=

* v0.2.1
Hotfix release, which adds the missing =PContext= object for the dummy
backend, which is used to test on travis in ggplotnim.
* v0.2.0
- fix remaining places, which are supposed to use =pointWidth/Height=
- make =ignoreOverflow= work for =layout= (was previously ignored),
  which allows for total heights / widhts larger than the
  viewport. Better to have overflowing viewports than crash if
  desired!
- simplify =toAbsImage= implementation, calls =to= for each =Coord=
  field instead now.
- deprecate =to= for =Coord=. Use =to= for =Coord1D= instead on each
  field!
- =to= now return early if input already has output type
- =BImage= now has a =PContext= field. Instead of creating a context
  for each field, we now keep a global one, whose state we save and
  revert. 
- =Viewport= and =GraphObject= are now =ref objects= to avoid costly
  copies, if we have large objects in =ggplotnim=. Reduces memory
  footprint for plots with many elements significantly (1 Mio. point
  scatter plot before 8.5 GB (!!!), now *cough* only 1.7 GB). 

* v0.1.17
Hotfix release for =v0.1.16= due to missing field.
- add =alignKind= field to =Font=

* v0.1.16
- =layout= now has a =ignoreOverflow= argument, which if true will
  allow overflowing layouts, i.e. layouts which exceed the size of the
  viewport
- =Style= now has a =font= field

* v0.1.15
- fix =pointWidth= and =pointHeight= to return real width and height
  of viewport
- add arithmetic procs for =Quantity=.
  These respect absolute units and try to remain them. If both are
  absolute, result is absolute. If only one is absolute the result
  will also be absolute. Only relative returned if both are relative.
- fix arithmetic for =Coord1D= to effectively follow the same rules as
  the ones for =Quantity= mentioned above
- fixes many wrong scales used for conversions / embeddings
  -> This and the above means adding an absolute distance to some
  quantity or coordinate will now result in that distance on the final
  plot, no matter how embedded the current viewport is!
- add =drawBoundary= proc to highlight different viewports (including
  writing its name / a number into the center with different colors)
- =initLine= is now public
- tick label related procs now allow custom margin to be set (by
  default it's 0.4 cm for y labels / ticks and 0.5 cm for x labels / ticks)
- tick calculations now fully respect =boundScale= if given (that is
  the resulting's objects (and view's) data scale is =boundScale=
  instead of the new scale
- =layout= is significantly improved. It allows absolute units and
  does not convert these to relative. However, margins are not allowed
  (have no effect) at the moment. But they were broken.
- add support for gradients. So far only on rectangles, but that's an
  easy fix.









